apply plugin: 'android-library'
apply plugin: 'checkstyle'
apply from: '../release.gradle'

android {
  compileSdkVersion 19
  buildToolsVersion '19.1.0'

  defaultConfig {
    minSdkVersion 10
    targetSdkVersion 19
  }

  lintOptions {
    abortOnError false
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }
}

checkstyle {
  configFile project.file('../checkstyle.xml')
  showViolations true
}

android.libraryVariants.all { variant ->
  def name = variant.buildType.name

  // Checkstyle
  def checkstyle = project.tasks.create "checkstyle${name.capitalize()}", Checkstyle
  checkstyle.dependsOn variant.javaCompile
  checkstyle.source variant.javaCompile.source
  checkstyle.classpath = project.fileTree(variant.javaCompile.destinationDir)
  checkstyle.exclude('**/BuildConfig.java')
  checkstyle.exclude('**/R.java')
  checkstyle.exclude('**/com/localytics/**')
  project.tasks.getByName('check').dependsOn checkstyle

  // Only attach a jar for non-debug build types.
  if (!name.equals(com.android.builder.core.BuilderConstants)) {
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    //Include Java classes
    task.from variant.javaCompile.destinationDir
    //Include dependent jars with some exceptions
    task.from configurations.compile.findAll {
      it.getName() != 'android.jar'
    }.collect {
      it.isDirectory() ? it : zipTree(it)
    }
    artifacts.add('archives', task);
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'com.amplitude:android-sdk:1.4'
  compile 'com.bugsnag:bugsnag-android:2.2.0'
  compile 'ly.count:sdk-android:13.11'
  compile 'com.mixpanel.android:mixpanel-android:4.2.1@aar'
  compile 'com.quantcast.android.measurement:QuantcastAndroidSdk:1.2.1'
  androidTestCompile 'junit:junit:4.11'
}
