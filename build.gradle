
apply plugin: 'android-library'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}

group = 'io.segment.android'
archivesBaseName = 'analytics-android'
version = '0.6.10'

dependencies {
    compile "com.mixpanel.android:mixpanel-android:4.1.0@aar"
}

android {
    buildToolsVersion "19.0.1"
    compileSdkVersion 19

     sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src', 'bundled-src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }

    dependencies {
        compile fileTree(dir: 'libs/', include: '*.jar')
    }
}

android.libraryVariants.all { variant ->
  def name = variant.buildType.name
  if (name.equals(com.android.builder.BuilderConstants.DEBUG)) {
    return; // skip debug builds
  }
  def task = project.tasks.create "jar${name.capitalize()}", Jar
  task.dependsOn variant.javaCompile
  // include Java classes
  task.from variant.javaCompile.destinationDir
  // include dependent jars with some exceptions
  task.from configurations.compile.findAll {
        it.getName() != 'android.jar' &&
        !it.getName().startsWith('junit')
    }.collect {
        it.isDirectory() ? it : zipTree(it)
    }
  artifacts.add('archives', task);
}